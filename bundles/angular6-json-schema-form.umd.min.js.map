{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular6-json-schema-form/lib/shared/validator.functions.ts","ng://angular6-json-schema-form/lib/shared/utility.functions.ts","ng://angular6-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://angular6-json-schema-form/lib/shared/merge-schemas.function.ts","ng://angular6-json-schema-form/lib/shared/json-schema.functions.ts","ng://angular6-json-schema-form/lib/shared/format-regex.constants.ts","ng://angular6-json-schema-form/lib/shared/json.validators.ts","ng://angular6-json-schema-form/lib/shared/form-group.functions.ts","ng://angular6-json-schema-form/lib/shared/layout.functions.ts","ng://angular6-json-schema-form/lib/locale/en-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/fr-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/zh-validation-messages.ts","ng://angular6-json-schema-form/lib/json-schema-form.service.ts","ng://angular6-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://angular6-json-schema-form/lib/framework-library/framework.ts","ng://angular6-json-schema-form/lib/widget-library/add-reference.component.ts","ng://angular6-json-schema-form/lib/widget-library/button.component.ts","ng://angular6-json-schema-form/lib/widget-library/checkbox.component.ts","ng://angular6-json-schema-form/lib/shared/date.functions.ts","ng://angular6-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://angular6-json-schema-form/lib/widget-library/file.component.ts","ng://angular6-json-schema-form/lib/widget-library/input.component.ts","ng://angular6-json-schema-form/lib/widget-library/message.component.ts","ng://angular6-json-schema-form/lib/widget-library/none.component.ts","ng://angular6-json-schema-form/lib/widget-library/number.component.ts","ng://angular6-json-schema-form/lib/widget-library/one-of.component.ts","ng://angular6-json-schema-form/lib/widget-library/radios.component.ts","ng://angular6-json-schema-form/lib/widget-library/root.component.ts","ng://angular6-json-schema-form/lib/widget-library/section.component.ts","ng://angular6-json-schema-form/lib/widget-library/select.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-framework.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-widget.component.ts","ng://angular6-json-schema-form/lib/widget-library/submit.component.ts","ng://angular6-json-schema-form/lib/widget-library/tabs.component.ts","ng://angular6-json-schema-form/lib/widget-library/template.component.ts","ng://angular6-json-schema-form/lib/widget-library/textarea.component.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.service.ts","ng://angular6-json-schema-form/lib/framework-library/framework-library.service.ts","ng://angular6-json-schema-form/lib/json-schema-form.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://angular6-json-schema-form/lib/widget-library/hidden.component.ts","ng://angular6-json-schema-form/lib/widget-library/tab.component.ts","ng://angular6-json-schema-form/lib/widget-library/orderable.directive.ts","ng://angular6-json-schema-form/lib/widget-library/index.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.module.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://angular6-json-schema-form/lib/json-schema-form.module.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","_executeValidators","control","validators","invert","map","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","tslib_1.__values","objects_1_1","currentObject","isObject","_c","keys","_d","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","undefined","hasValue","isArray","isString","isNumber","strict","isNaN","isInteger","option","item","toString","isDate","isMap","isSet","isType","type","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","slice","getTime","toSchemaType","includes","testValue","isPromise","object","then","isObservable","subscribe","toObservable","observable","from","Observable","array","allIn","subItem","value1","value2","addClasses","oldClasses","newClasses","badType","toSet","Set","split","combinedSet","forEach","add","join","copy","errors","Map","fn","recurse","rootObject","_b","forEachCopy","newObject","hasOwn","property","has","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","filter","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","keyArray","parse","subObject","keyArray_1","keyArray_1_1","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","toKey","every","test","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","schema","firstKey","shift","properties","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","charAt","nextCB","RegExp","Injectable","mergeSchemas","schemas","some","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","_","isEqual","allOf","item1","findIndex","item2","combinedObject","_e","_f","subKey","definitions","_g","_h","required","combinedDependency","schemaDependency","dependencies","gcd_1","multipleOf","Math","min","max","notAnyOf","reduce","notAnyOfArray","notSchema","anyOf","not","_j","_k","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_l","_m","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","newSchema","getFieldType","fieldType","integer","null","buildSubSchema","$schema","size","a","minItems","getFromSchema","returnType","subSchema","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","maxItems","getTitleMapFromOneOf","color","date","date-time","email","uri","format","oneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","options","newOptions","fixUiKeys","formOptions","defautWidgetOptions","_a","newTitleMap","flatList","titleMap","enum","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","const","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","exclusive","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","cloneDeep","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","jsonSchemaFormatTests","time","hostname","ipv4","ipv6","uri-reference","uri-template","url","uuid","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","allowedValues","enumValue","inputValue","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","requiredFormat","isValid","formatTest","minimum","minimumValue","exclusiveMinimum","exclusiveMinimumValue","maximum","maximumValue","exclusiveMaximum","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","minimumItems","currentItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","actual","requiredTrue","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","validatorFns","validatorFn","parameters","groupControls_1","newControl","FormGroup","FormArray","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","enValidationMessages","log10","frValidationMessages","zhValidationMessages","JsonSchemaFormService","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","ajvOptions","jsonPointers","unknownFormats","ajv","Ajv","validateFormData","formGroupTemplate","framework","validData","ajvErrors","validationErrors","dataErrors","formValueSubscription","dataChanges","Subject","isValidChanges","validationErrorChanges","","language","defaultFormOptions","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","widgets","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","fr","en","zh","getData","getSchema","getLayout","resetAllValues","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","dataPath","message","compileAjvSchema","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","all","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","statusChanges","getDataPointer","addSpaces","string","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","convertSchemaToDraft6","draft","changed","simpleTypes","contentEncoding","media","binaryEncoding","extends","disallow","maxDecimal","pow","divisibleBy","minimumCanEqual","maximumCanEqual","properties_1","requiredKeys_1","optional","requires","dependencies_1","id","$id","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","number","newType","tslib_1.__spread","default","typeSchema","newKey_1","Framework","stylesheets","scripts","AddReferenceComponent","ngOnInit","event","preventDefault","parent","itemCount","tslib_1.__decorate","Input","Component","selector","changeDetection","ChangeDetectionStrategy","Default","ButtonComponent","onClick","CheckboxComponent","trueValue","falseValue","dateToString","dateFormat","stringToDate","getFullYear","getMonth","getDay","getDate","ordinal","last","1","2","3","dateString","findDate","dateParts","part","thisYear","Date","year","foundDate","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","autoCompleteList","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowNegative","allowDecimal","allowExponents","lastValidNumber","OneOfComponent","RadiosComponent","radiosList","RootComponent","isFlexItem","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","newComponent","updateComponent","ngOnChanges","widgetContainer","createComponent","resolveComponentFactory","instance","ViewChild","read","ViewContainerRef","ComponentFactoryResolver","SelectWidgetComponent","SubmitComponent","TabsComponent","selectedItem","showAddTab","updateControl","select","lastItem","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","defaultWidget","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","registeredWidgets","frameworkWidgets","activeWidgets","setActiveWidgets","widgetName","usedAliases","setDefaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","FrameworkLibraryService","frameworks","activeFramework","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","getFrameworkScripts","tslib_1.__param","Inject","JSON_SCHEMA_FORM_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JsonSchemaFormComponent","multi","changeDetector","sanitizer","formInitialized","objectWrap","previousInputs","form","JSONSchema","UISchema","onChanges","EventEmitter","onSubmit","formSchema","dataChange","modelChange","formDataChange","ngModelChange","setFormValues","bypassSecurityTrustResourceUrl","stylesheet","script","updateForm","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","changedInput","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","markForCheck","validateOnRender_1","touchAll_1","markAsTouched","Output","OnPush","providers","ChangeDetectorRef","DomSanitizer","NoFrameworkComponent","NoFramework","_super","tslib_1.__extends","HiddenComponent","TabComponent","OrderableDirective","elementRef","ngZone","overParentElement","overChildElement","element","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","sourceArrayIndex","sessionStorage","setItem","dropEffect","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","BASIC_WIDGETS","WidgetLibraryModule","forRoot","ngModule","WidgetLibraryModule_1","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkModule","useClass","JsonSchemaFormModule","FlexLayoutRootComponent","FlexLayoutSectionComponent","fxLayout","fxLayoutWrap","MaterialAddReferenceComponent","MaterialButtonComponent","MaterialButtonGroupComponent","vertical","MaterialCheckboxComponent","showSlideToggle","MaterialCheckboxesComponent","horizontalList","checkedItems","updateAllValues","MaterialChipListComponent","MaterialDatepickerComponent","setControlDate","placeholder","dateValue","setDate","MaterialDesignFrameworkComponent","frameworkInitialized","parentArray","dynamicTitle","widgetOptions","initializeFramework","updateTitle","widgetLayoutNode","MaterialFileComponent","MaterialInputComponent","MaterialNumberComponent","MaterialOneOfComponent","MaterialRadiosComponent","flexDirection","MaterialSelectComponent","MaterialSliderComponent","MaterialStepperComponent","MaterialTabsComponent","MaterialTextareaComponent","MaterialDesignFramework","button-group","chip-list","slider","stepper","any-of","card","expansion-panel","MATERIAL_FRAMEWORK_COMPONENTS","ANGULAR_MATERIAL_MODULES","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","MaterialDesignFrameworkModule","FlexLayoutModule","Bootstrap3FrameworkComponent","isInputWidget","setTitle","htmlClass","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","itemLabelHtmlClass","fieldHtmlClass","messageLocation","icon","updateHelpBlock","thisVar","helpBlock","dirty","Bootstrap3Framework","Bootstrap3FrameworkModule","Bootstrap4FrameworkComponent","Bootstrap4Framework","Bootstrap4FrameworkModule","isFunction","_toPromise","toPromise"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\nimport { from, Observable } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Object]';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item) ||\n    Object.prototype.toString.call(item) === '[object Array]';\n}\n\nexport function isDate(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {\n  hasValue,\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isMap,\n  isObject,\n  isSet,\n  isString,\n  PlainObject\n  } from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { copy, hasOwn } from './utility.functions';\nimport { Injectable } from '@angular/core';\nimport {\n  isArray,\n  isDefined,\n  isEmpty,\n  isMap,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\n\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          if (errors) {\n            console.error(`get error: \"${key}\" key not found in object.`);\n            console.error(pointer);\n            console.error(object);\n          }\n          return getBoolean ? false : undefined;\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (const item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (const [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      const newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      const parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    const results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (const key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (const key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    const keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = '';\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   *\n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (const pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  }\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   *\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      const pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    const controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (const key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      const parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","import _ from 'lodash';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || _.isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (_.isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description': case '$comment':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import _ from 'lodash';\nimport { forEach, hasOwn, mergeFilteredObject } from './utility.functions';\nimport {\n  getType,\n  hasValue,\n  inArray,\n  isArray,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { mergeSchemas } from './merge-schemas.function';\n\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  const newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (const key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true;\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  const controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      const itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n}\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  const newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        const [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  const validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          const eLimit = 'exclusive' + ucLimit;\n          const limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * //\n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * //\n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = _.cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = _.cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  // tslint:disable-next-line:max-line-length\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  // tslint:disable-next-line:max-line-length\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // tslint:disable-next-line:max-line-length\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // tslint:disable-next-line:max-line-length\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  // tslint:disable-next-line:max-line-length\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  // tslint:disable-next-line:max-line-length\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function (str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date' | 'time' | 'date-time' | 'email' | 'hostname' | 'ipv4' | 'ipv6' |\n  'uri' | 'uri-reference' | 'uri-template' | 'url' | 'uuid' | 'color' |\n  'json-pointer' | 'relative-json-pointer' | 'regex';\n","import _ from 'lodash';\nimport {\n  _executeAsyncValidators,\n  _executeValidators,\n  _mergeErrors,\n  _mergeObjects,\n  AsyncIValidatorFn,\n  getType,\n  hasValue,\n  isArray,\n  isBoolean,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isString,\n  isType,\n  IValidatorFn,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toObservable,\n  xor\n  } from './validator.functions';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { forEachCopy } from './utility.functions';\nimport { forkJoin } from 'rxjs';\nimport { JsonSchemaFormatNames, jsonSchemaFormatTests } from './format-regex.constants';\nimport { map } from 'rxjs/operators';\n\n\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  }\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        _.isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqual(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqual(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqual(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      const currentValue: string = control.value;\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      const currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (const requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              const requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const sorted: any[] = control.value.slice().sort();\n      const duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      const isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      const isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      const validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      const isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      const arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      const isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const error = validator(control, !invert);\n      const isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  }\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      // tslint:disable-next-line:max-line-length\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import _ from 'lodash';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn\n  } from '@angular/forms';\nimport { forEach, hasOwn } from './utility.functions';\nimport { getControlValidators, removeRecursiveReferences } from './json-schema.functions';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isDate,\n  isDefined,\n  isEmpty,\n  isObject,\n  isPrimitive,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toSchemaType\n  } from './validator.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\n\n\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any, nodeValue: any = null, setValues = true,\n  schemaPointer = '', dataPointer = '', templatePointer = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (!isDefined(nodeValue) && (\n      jsf.formOptions.setSchemaDefaults === true ||\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n    )) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\n  const controlType =\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\n      schemaType === 'object' ? 'FormGroup' :\n      (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\n        schemaType === 'array' ? 'FormArray' :\n        !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\n  const shortDataPointer =\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has('schemaType')) {\n    nodeOptions.set('schemaPointer', schemaPointer);\n    nodeOptions.set('schemaType', schema.type);\n    if (schema.format) {\n      nodeOptions.set('schemaFormat', schema.format);\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\n    }\n    if (controlType) {\n      nodeOptions.set('templatePointer', templatePointer);\n      nodeOptions.set('templateType', controlType);\n    }\n  }\n  let controls: any;\n  const validators = getControlValidators(schema);\n  switch (controlType) {\n\n    case 'FormGroup':\n      controls = {};\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\n        const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n          const unnamedKeys = Object.keys(schema.properties)\n            .filter(key => !propertyKeys.includes(key));\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === '*') {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(key => hasOwn(schema.properties, key) ||\n            hasOwn(schema, 'additionalProperties')\n          )\n          .forEach(key => controls[key] = buildFormGroupTemplate(\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\n            schemaPointer + (hasOwn(schema.properties, key) ?\n              '/properties/' + key : '/additionalProperties'\n            ),\n            dataPointer + '/' + key,\n            templatePointer + '/controls/' + key\n          ));\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case 'FormArray':\n      controls = [];\n      const minItems =\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\n      const maxItems =\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\n        const tupleItems = nodeOptions.get('tupleItems') ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(buildFormGroupTemplate(\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\n              schemaPointer + '/items/' + i,\n              dataPointer + '/' + i,\n              templatePointer + '/controls/' + i\n            ));\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf, null, setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + '/controls/' + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaPointer + '/items/' + i,\n                  dataPointer + '/' + i,\n                  templatePointer + '/controls/' + i\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\n          additionalItemsPointer = schemaPointer + '/additionalItems';\n        }\n\n        // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + '/items';\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf, null, setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + '/controls/-'\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, 'required')) {\n          const arrayLength = Math.min(Math.max(\n            itemRecursive ? 0 :\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), maxItems);\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaRefPointer,\n                  dataPointer + '/-',\n                  templatePointer + '/controls/-'\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case '$ref':\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case 'FormControl':\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get('disabled') || false\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n*/\nexport function buildFormGroup(template: any): AbstractControl {\n  const validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  if (hasOwn(template, 'validators')) {\n    forEach(template.validators, (parameters, validator) => {\n      if (typeof JsonValidators[validator] === 'function') {\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\n      }\n    });\n    if (validatorFns.length &&\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\n    ) {\n      validatorFn = validatorFns.length > 1 ?\n        JsonValidators.compose(validatorFns) : validatorFns[0];\n    }\n  }\n  if (hasOwn(template, 'controlType')) {\n    switch (template.controlType) {\n      case 'FormGroup':\n        const groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          const newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) { groupControls[key] = newControl; }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case 'FormArray':\n        return new FormArray(_.filter(_.map(template.controls,\n          controls => buildFormGroup(controls)\n        )), validatorFn);\n      case 'FormControl':\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (const currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (typeof currentValue === 'object' &&\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [...currentValue];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== 'object') {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (const value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        const newValues = [];\n        for (const value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\n    requiredArray = forEach(requiredArray,\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any, dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\n  returnEmptyFields = false, fixErrors = false\n): any {\n  if (formData === null || typeof formData !== 'object') { return formData; }\n  const formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      const genericPointer =\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\n          dataMap.get(genericPointer).get('schemaType');\n        if (schemaType === 'null') {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if ((hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\n        ) {\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n          // If returnEmptyFields === false,\n          // only add empty arrays and objects to required keys\n        } else if (schemaType === 'object' && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\n            const keySchemaType =\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\n            if (keySchemaType === 'array') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === 'object') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n            // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n            // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (typeof value !== 'object' || isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error('formatFormData error: ' +\n          `Schema type not found for form value at ${genericPointer}`);\n        console.error('dataMap', dataMap);\n        console.error('recursiveRefMap', recursiveRefMap);\n        console.error('genericPointer', genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any, dataPointer: Pointer, returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === 'string') {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) { return formControl; }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (typeof formGroup.get === 'function' &&\n    dataPointerArray.every(key => key.indexOf('.') === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join('.'));\n    if (formControl) { return formControl; }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (const key of dataPointerArray) {\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\n    if (isArray(subGroup) && (key === '-')) {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import _ from 'lodash';\nimport {\n  checkInlineType,\n  getFromSchema,\n  getInputType,\n  isInputRequired,\n  removeRecursiveReferences,\n  updateInputOptions\n  } from './json-schema.functions';\nimport {\n  copy,\n  fixTitle,\n  forEach,\n  hasOwn\n  } from './utility.functions';\nimport {\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { TitleMapItem } from '../json-schema-form.service';\n\n\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * //\n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    const newNode: any = {\n      _id: _.uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n          // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n          // Angular JSON Schema Form 'validationMessages'\n          // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code === '0' ? 'type' :\n                  code === '1' ? 'enum' :\n                    code === '100' ? 'multipleOf' :\n                      code === '101' ? 'minimum' :\n                        code === '102' ? 'exclusiveMinimum' :\n                          code === '103' ? 'maximum' :\n                            code === '104' ? 'exclusiveMaximum' :\n                              code === '200' ? 'minLength' :\n                                code === '201' ? 'maxLength' :\n                                  code === '202' ? 'pattern' :\n                                    code === '300' ? 'minProperties' :\n                                      code === '301' ? 'maxProperties' :\n                                        code === '302' ? 'required' :\n                                          code === '304' ? 'dependencies' :\n                                            code === '400' ? 'minItems' :\n                                              code === '401' ? 'maxItems' :\n                                                code === '402' ? 'uniqueItems' :\n                                                  code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n        // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (const item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        const itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          const arrayItemGroup = [];\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            const subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              const arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: _.uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n            newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            _.cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n            // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: _.uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = _.cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: _.cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: _.uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * //\n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : _.uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n      // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: _.uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n      // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * //\n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    const realIndex = +index + indexPad;\n    const newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n}\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = _.cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n    // Otherwise, return referenced layout\n  } else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = _.cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = _.uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (const i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (const i of Object.keys(enumList)) {\n        const value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          const name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (const value of Object.keys(titleMap)) {\n        const name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (const i of Object.keys(enumList)) {\n      const name = enumList[i];\n      const value = enumList[i];\n      newTitleMap.push({ name, value });\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [{ name: 'True', value: true }, { name: 'False', value: false }];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n      // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const zhValidationMessages: any = { // Chinese error messages\n  required: 'å¿å¡«å­æ®µ.',\n  minLength: 'å­ç¬¦é¿åº¦å¿é¡»å¤§äºæèç­äº {{minimumLength}} (å½åé¿åº¦: {{currentLength}})',\n  maxLength: 'å­ç¬¦é¿åº¦å¿é¡»å°äºæèç­äº {{maximumLength}} (å½åé¿åº¦: {{currentLength}})',\n  pattern: 'å¿é¡»å¹éæ­£åè¡¨è¾¾å¼: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'å¿é¡»ä¸ºæ¥ææ ¼å¼, æ¯å¦ \"2000-12-31\"';\n      case 'time':\n        return 'å¿é¡»ä¸ºæ¶é´æ ¼å¼, æ¯å¦ \"16:20\" æè \"03:14:15.9265\"';\n      case 'date-time':\n        return 'å¿é¡»ä¸ºæ¥ææ¶é´æ ¼å¼, æ¯å¦ \"2000-03-14T01:59\" æè \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'å¿é¡»ä¸ºé®ç®±å°å, æ¯å¦ \"name@example.com\"';\n      case 'hostname':\n        return 'å¿é¡»ä¸ºä¸»æºå, æ¯å¦ \"example.com\"';\n      case 'ipv4':\n        return 'å¿é¡»ä¸º IPv4 å°å, æ¯å¦ \"127.0.0.1\"';\n      case 'ipv6':\n        return 'å¿é¡»ä¸º IPv6 å°å, æ¯å¦ \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'å¿é¡»ä¸º url, æ¯å¦ \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'å¿é¡»ä¸º uuid, æ¯å¦ \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'å¿é¡»ä¸ºé¢è²å¼, æ¯å¦ \"#FFFFFF\" æè \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'å¿é¡»ä¸º JSON Pointer, æ¯å¦ \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'å¿é¡»ä¸ºç¸å¯¹ç JSON Pointer, æ¯å¦ \"2/pointer/to/something\"';\n      case 'regex':\n        return 'å¿é¡»ä¸ºæ­£åè¡¨è¾¾å¼, æ¯å¦ \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'å¿é¡»ä¸ºæ ¼å¼æ­£ç¡®ç ' + error.requiredFormat;\n    }\n  },\n  minimum: 'å¿é¡»å¤§äºæèç­äºæå°å¼: {{minimumValue}}',\n  exclusiveMinimum: 'å¿é¡»å¤§äºæå°å¼: {{exclusiveMinimumValue}}',\n  maximum: 'å¿é¡»å°äºæèç­äºæå¤§å¼: {{maximumValue}}',\n  exclusiveMaximum: 'å¿é¡»å°äºæå¤§å¼: {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `å¿é¡»æ ${decimals} ä½ææ´å°çå°æ°ä½`;\n    } else {\n      return `å¿é¡»ä¸º ${error.multipleOfValue} çåæ°`;\n    }\n  },\n  minProperties: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  maxProperties: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  minItems: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  maxItems: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  uniqueItems: 'ææé¡¹ç®å¿é¡»æ¯å¯ä¸ç',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import _ from 'lodash';\nimport Ajv from 'ajv';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport {\n  buildFormGroup,\n  buildFormGroupTemplate,\n  formatFormData,\n  getControl\n  } from './shared/form-group.functions';\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\nimport { buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences } from './shared/json-schema.functions';\nimport { enValidationMessages } from './locale/en-validation-messages';\nimport { frValidationMessages } from './locale/fr-validation-messages';\nimport { zhValidationMessages } from './locale/zh-validation-messages';\nimport {\n  fixTitle,\n  forEach,\n  hasOwn,\n  toTitleCase\n  } from './shared/utility.functions';\nimport {\n  hasValue,\n  isArray,\n  isDefined,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { Injectable } from '@angular/core';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { Subject } from 'rxjs';\n\n\n\nexport interface TitleMapItem {\n  name?: string; value?: any; checked?: boolean; group?: string; items?: TitleMapItem[];\n}\nexport interface ErrorMessages {\n  [control_name: string]: { message: string | Function | Object, code: string }[];\n}\n\n\n@Injectable()\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = 'en-US'; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\n    // for addSubmit: true = always, false = never,\n    // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: 'no-framework', // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\n    // true = always set (unless overridden by layout default or formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\n    // true = always set (unless overridden by formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\n    // true = validate all fields immediately\n    // false = only validate fields after they are touched by user\n    // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: { // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {} // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n  }\n\n  setLanguage(language: string = 'en-US') {\n    this.language = language;\n    const languageValidationMessages = {\n        fr: frValidationMessages,\n        en: enValidationMessages,\n        zh: zhValidationMessages\n    };\n    const languageCode = language.slice(0, 2);\n\n    const validationMessages = languageValidationMessages[languageCode];\n\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\n      _.cloneDeep(validationMessages);\n  }\n\n  getData() { return this.data; }\n\n  getSchema() { return this.schema; }\n\n  getLayout() { return this.layout; }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = _.cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error['code']] = error['message'];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue, this.dataMap, this.dataRecursiveRefMap,\n      this.arrayMap, this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = errors => {\n      const compiledErrors = {};\n      (errors || []).forEach(error => {\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\n      this.formValueSubscription = this.formGroup.valueChanges\n        .subscribe(formValue => this.validateData(formValue));\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = _.cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      ['ErrorState', 'SuccessState']\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\n        .forEach(suffix => {\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\n          delete globalDefaults['disable' + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties['ui:order'])) {\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\n        delete this.schema.properties['ui:order'];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) { return buildSchemaFromLayout(layout); }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = '', value: any = {}, values: any = {}, key: number | string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = '', value: any = {}, values: any = {},\n    key: number | string = null, tpldata: any = null\n  ) {\n    if (typeof expression !== 'string') { return ''; }\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\n    expression = expression.trim();\n    if ((expression[0] === '\\'' || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === 'idx' || expression === '$index') { return index; }\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\n    if (['\"', '\\'', ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\n        JsonPointer.get(value, pointer.slice(1)) :\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\n          JsonPointer.get(values, pointer.slice(1)) :\n          pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\n            JsonPointer.get(tpldata, pointer.slice(1)) :\n            JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\n    }\n    if (expression.indexOf('[idx]') > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf('[$index]') > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf('||') > -1) {\n      return expression.split('||').reduce((all, term) =>\n        all || this.parseExpression(term, value, values, key, tpldata), ''\n      );\n    }\n    if (expression.indexOf('&&') > -1) {\n      return expression.split('&&').reduce((all, term) =>\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\n      ).trim();\n    }\n    if (expression.indexOf('+') > -1) {\n      return expression.split('+')\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\n        .join('');\n    }\n    return '';\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {}, childNode: any = null, index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== '$ref' ? [\n        [childNode, '/options/legend'],\n        [childNode, '/options/title'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend'],\n      ] : [\n          [childNode, '/options/title'],\n          [childNode, '/options/legend'],\n          [parentNode, '/options/title'],\n          [parentNode, '/options/legend']\n        ]\n    );\n    if (!text) { return text; }\n    const childValue = isArray(parentValues) && index < parentValues.length ?\n      parentValues[index] : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\n      null :\n      this.parseText(\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\n        this.getFormControlValue(this),\n        (this.getFormControlGroup(this) || <any>{}).value,\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === 'string') {\n        let pointer = layoutNode.options.condition;\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === 'model') {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === 'function') {\n        result = layoutNode.options.condition(this.data);\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\n        try {\n          const dynFn = new Function(\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error('condition functionBody errored out on evaluation: ' + layoutNode.options.condition.functionBody);\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) { return false; }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\n        ctx.layoutNode.options : _.cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\n      ctx.formControl.statusChanges.subscribe(status =>\n        ctx.options.errorMessage = status === 'VALID' ? null :\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\n      );\n      ctx.formControl.valueChanges.subscribe(value => {\n        if (!!value) { ctx.controlValue = value; }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) { return null; }\n    if (!isObject(validationMessages)) { validationMessages = {}; }\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\n    const formatError = (error) => typeof error === 'object' ?\n      Object.keys(error).map(key =>\n        error[key] === true ? addSpaces(key) :\n          error[key] === false ? 'Not ' + addSpaces(key) :\n            addSpaces(key) + ': ' + formatError(error[key])\n      ).join(', ') :\n      addSpaces(error.toString());\n    const messages = [];\n    return Object.keys(errors)\n      // Hide 'required' error, unless it is the only one\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\n      .map(errorKey =>\n        // If validationMessages is a string, return it\n        typeof validationMessages === 'string' ? validationMessages :\n          // If custom error message is a function, return function result\n          typeof validationMessages[errorKey] === 'function' ?\n            validationMessages[errorKey](errors[errorKey]) :\n            // If custom error message is a string, replace placeholders and return\n            typeof validationMessages[errorKey] === 'string' ?\n              // Does error message have any {{property}} placeholders?\n              !/{{.+?}}/.test(validationMessages[errorKey]) ?\n                validationMessages[errorKey] :\n                // Replace {{property}} placeholders with values\n                Object.keys(errors[errorKey])\n                  .reduce((errorMessage, errorProperty) => errorMessage.replace(\n                    new RegExp('{{' + errorProperty + '}}', 'g'),\n                    errors[errorKey][errorProperty]\n                  ), validationMessages[errorKey]) :\n              // If no custom error message, return formatted error data instead\n              addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\n      ).join('<br>');\n  }\n\n  updateValue(ctx: any, value: any): void {\n\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) { formArray.removeAt(0); }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) { return null; }\n    return '/' + ctx.layoutIndex.join('/items/');\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return false; }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else { // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\n    ) { return false; }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx))\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\n    } else { // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .removeControl(this.getFormControlName(ctx));\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import _ from 'lodash';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean; draft?: number; }\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft }))];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [convertSchemaToDraft6(newSchema.extends, { changed, draft })];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [newSchema.dependencies[key]]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [properties[key].requires] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription;\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n        // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n          // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = ['additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = ['maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = ['maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array': [...numberKeys, ...objectKeys, ...stringKeys],\n            'integer': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'number': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'object': [...arrayKeys, ...numberKeys, ...stringKeys],\n            'string': [...arrayKeys, ...numberKeys, ...objectKeys],\n            'all': [...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![...(filterKeys[newType.type] || filterKeys.all), 'type', 'default']\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n          // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        ['definitions', 'dependencies', 'properties', 'patternProperties']\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        ['items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not'].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = _.cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","/**\n * 'dateToString' function\n *\n * //  { Date | string } date\n * //   options\n * // { string }\n */\nexport function dateToString(date, options: any = {}) {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  if (typeof date === 'string') { date = stringToDate(date); }\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dateFormat\n    .replace(/YYYY/ig, date.getFullYear() + '')\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\n    .replace(/M/ig, (date.getMonth() + 1) + '')\n    .replace(/DDDD/ig, longDays[date.getDay()])\n    .replace(/DDD/ig, shortDays[date.getDay()])\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\n    .replace(/D/ig, date.getDate() + '')\n    .replace(/S/ig, ordinal(date.getDate()));\n}\n\nexport function ordinal(number: number|string): string {\n  if (typeof number === 'number') { number = number + ''; }\n  const last = number.slice(-1);\n  const nextToLast = number.slice(-2, 1);\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\n}\n\n/**\n * 'stringToDate' function\n *\n * //  { string } dateString\n * // { Date }\n */\nexport function stringToDate(dateString) {\n  const getDate: string = findDate(dateString);\n  if (!getDate) { return null; }\n  let dateParts: number[] = [];\n  // Split x-y-z to [x, y, z]\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\n  // Split xxxxyyzz to [xxxx, yy, zz]\n  } else if (/^\\d{8}$/.test(getDate)) {\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\n  }\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\n  // Check for [YYYY, MM, DD]\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n  // Check for [MM, DD, YYYY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n  // Check for [MM, DD, YY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\n    return new Date(year, dateParts[0] - 1, dateParts[1]);\n  // Check for [YY, MM, DD]\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\n    return new Date(year, dateParts[1] - 1, dateParts[2]);\n  }\n  return null;\n}\n\n/**\n * 'findDate' function\n *\n * //  { string } text\n * // { string }\n */\nexport function findDate(text) {\n  if (!text) { return null; }\n  let foundDate: any[];\n  // Match ...YYYY-MM-DD...\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match ...MM-DD-YYYY...\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match MM-DD-YY...\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YY-MM-DD...\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YYYYMMDD...\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\n  if (foundDate) { return foundDate[0]; }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (const checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../shared/utility.functions';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Injectable } from '@angular/core';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable()\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (const widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        const usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Framework } from './framework';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Inject, Injectable } from '@angular/core';\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable()\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import _ from 'lodash';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\n\n\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n};\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output: <pre>{{debugOutput}}</pre>\n    </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n    schema: null, layout: null, data: null, options: null, framework: null,\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n    formData: null, loadExternalAssets: null, debug: null,\n  };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any|string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  }\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return stylesheets.map(stylesheet => load(stylesheet));\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return scripts.map(script => load(script));\n  }\n\n  ngOnInit() {\n    this.updateForm();\n  }\n\n  ngOnChanges() {\n    this.updateForm();\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !_.isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n      // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n                                  // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = _.cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = _.cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n        // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = _.cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = _.cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    };\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = _.cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = _.cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = _.cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n          // Copy other alternate layout options to schema 'x-schema-form',\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'no-framework',\n  template: `\n    <select-widget-widget\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { NoFrameworkComponent } from './no-framework.component';\n// No framework - plain HTML controls (styles from form layout only)\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { OrderableDirective } from './orderable.directive';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\nexport { WidgetLibraryService } from './widget-library.service';\n","import { BASIC_WIDGETS } from './index';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OrderableDirective } from './orderable.directive';\n\n@NgModule({\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\n  entryComponents: [ ...BASIC_WIDGETS ],\n  providers:       [ JsonSchemaFormService ]\n})\nexport class WidgetLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WidgetLibraryModule,\n      providers: [ JsonSchemaFormService ]\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NoFramework } from './no.framework';\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n// No framework - plain HTML controls (styles from form layout only)\n\n@NgModule({\n  imports: [CommonModule, WidgetLibraryModule],\n  declarations: [NoFrameworkComponent],\n  exports: [NoFrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: NoFramework, multi: true }\n  ],\n  entryComponents: [NoFrameworkComponent]\n})\nexport class NoFrameworkModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\nimport { NgModule } from '@angular/core';\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\n})\nexport class JsonSchemaFormModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-root-widget',\n  template: `\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\n      [style.order]=\"layoutNode?.options?.order\"\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\n    <div>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FlexLayoutRootComponent {\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  removeItem(item) {\n    this.jsf.removeItem(item);\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in flex-layout-section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>\n\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </fieldset>\n\n    <mat-card *ngIf=\"containerType === 'card'\"\n      [ngClass]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <mat-card-header *ngIf=\"sectionTitle\">\n        <legend\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n          [innerHTML]=\"sectionTitle\"\n          (click)=\"toggleExpanded()\"></legend>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"expanded\">\n        <fieldset [disabled]=\"options?.readonly\">\n          <flex-layout-root-widget *ngIf=\"expanded\"\n            [layout]=\"layoutNode.items\"\n            [dataIndex]=\"dataIndex\"\n            [layoutIndex]=\"layoutIndex\"\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n            [style.display]=\"getFlexAttribute('display')\"\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\n            [style.align-items]=\"getFlexAttribute('align-items')\"\n            [style.align-content]=\"getFlexAttribute('align-content')\"\n            [fxLayout]=\"getFlexAttribute('layout')\"\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n          </fieldset>\n      </mat-card-content>\n      <mat-card-footer>\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\n      </mat-card-footer>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\n      [expanded]=\"expanded\"\n      [hideToggle]=\"!options?.expandable\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <legend *ngIf=\"sectionTitle\"\n            [class]=\"options?.labelHtmlClass\"\n            [innerHTML]=\"sectionTitle\"\n            (click)=\"toggleExpanded()\"></legend>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <fieldset [disabled]=\"options?.readonly\">\n        <flex-layout-root-widget *ngIf=\"expanded\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n          [style.display]=\"getFlexAttribute('display')\"\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\n          [style.align-items]=\"getFlexAttribute('align-items')\"\n          [style.align-content]=\"getFlexAttribute('align-content')\"\n          [fxLayout]=\"getFlexAttribute('layout')\"\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      </fieldset>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </mat-expansion-panel>`,\n  styles: [`\n    fieldset { border: 0; margin: 0; padding: 0; }\n    .legend { font-weight: bold; }\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class FlexLayoutSectionComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  expanded = true;\n  containerType = 'div';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n        break;\n      case 'card':\n        this.containerType = 'card';\n        break;\n      case 'expansion-panel':\n        this.containerType = 'expansion-panel';\n        break;\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\n        this.containerType = 'div';\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in flex-layout-root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    // if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n      case 'layout':\n        return (this.options.fxLayout || 'row') +\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\n\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-add-reference-widget',\n  template: `\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\n      <button mat-raised-button *ngIf=\"showAddButton\"\n        [color]=\"options?.color || 'accent'\"\n        [disabled]=\"options?.readonly\"\n        (click)=\"addItem($event)\">\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n      </button>\n    </section>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MaterialAddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this),\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../../shared/utility.functions';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-widget',\n  template: `\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\n      <button mat-raised-button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n    styles: [` button { margin-top: 10px; } `],\n})\nexport class MaterialButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-group-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-button-toggle-group\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        [vertical]=\"!!options.vertical\">\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialButtonGroupComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  radiosList: any[] = [];\n  vertical = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkbox-widget',\n  template: `\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  showSlideToggle = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = false;\n      this.jsf.updateValue(this, this.falseValue);\n    }\n    if (this.layoutNode.type === 'slide-toggle' ||\n      this.layoutNode.format === 'slide-toggle'\n    ) {\n      this.showSlideToggle = true;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\n\n// TODO: Change this to use a Selection List instead?\n// https://material.angular.io/components/list/overview\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkboxes-widget',\n  template: `\n    <div>\n      <mat-checkbox type=\"checkbox\"\n        [checked]=\"allChecked\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [indeterminate]=\"someChecked\"\n        [name]=\"options?.name\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateAllValues($event)\">\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\n      </mat-checkbox>\n      <label *ngIf=\"options?.title\"\n        class=\"title\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\n        <li *ngFor=\"let checkboxItem of checkboxList\"\n          [class]=\"options?.htmlClass || ''\">\n          <mat-checkbox type=\"checkbox\"\n            [(ngModel)]=\"checkboxItem.checked\"\n            [color]=\"options?.color || 'primary'\"\n            [disabled]=\"controlDisabled || options?.readonly\"\n            [name]=\"checkboxItem?.name\"\n            (blur)=\"options.showErrors = true\"\n            (change)=\"updateValue()\">\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\n          </mat-checkbox>\n        </li>\n      </ul>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    .title { font-weight: bold; }\n    .checkbox-list { list-style-type: none; }\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  horizontalList = false;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      for (const checkboxItem of this.checkboxList) {\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\n      }\n    }\n  }\n\n  get allChecked(): boolean {\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\n  }\n\n  get someChecked(): boolean {\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\n  }\n\n  updateValue() {\n    this.options.showErrors = true;\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n\n  updateAllValues(event: any) {\n    this.options.showErrors = true;\n    this.checkboxList.forEach(t => t.checked = event.checked);\n    this.updateValue();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-chip-list-widget',\n  template: ``,\n})\nexport class MaterialChipListComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { dateToString, stringToDate } from '../../shared';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-datepicker-widget',\n  template: `\n    <mat-form-field [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n        <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [readonly]=\"options?.readonly\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"dateValue\"\n        [readonly]=\"options?.readonly\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    </mat-form-field>\n    <mat-datepicker #picker ></mat-datepicker>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialDatepickerComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  dateValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    this.setControlDate(this.controlValue);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  setControlDate(dateString: string) {\n    this.dateValue = stringToDate(dateString);\n    this.setDate(this.dateValue);\n  }\n  \n  updateValue(event) {\n    this.options.showErrors = true;\n    if (event.value) this.setDate(dateToString(event.value));\n  }\n\n  setDate(date){\n    this.formControl.setValue(date, this.options);\n  }\n\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport _ from 'lodash';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { isDefined } from '../../shared';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-design-framework',\n  template: `\n    <div\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\n      [orderable]=\"isOrderable\"\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"widgetLayoutNode\">\n      <svg *ngIf=\"showRemoveButton\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\n        class=\"close-button\"\n        (click)=\"removeItem()\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\n      </svg>\n      <select-widget-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\n    </div>\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\n  styles: [`\n    .array-item {\n      border-radius: 2px;\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n                  0 2px 2px  0   rgba(0,0,0,.14),\n                  0 1px 5px  0   rgba(0,0,0,.12);\n      padding: 6px;\n      position: relative;\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\n    }\n    .close-button {\n      cursor: pointer;\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      fill: rgba(0,0,0,.4);\n      visibility: hidden;\n      z-index: 500;\n    }\n    .close-button:hover { fill: rgba(0,0,0,.8); }\n    .array-item:hover > .close-button { visibility: visible; }\n    .spacer { margin: 6px 0; }\n    [draggable=true]:hover {\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\n                  0 8px 10px 1px rgba(0,0,0,.14),\n                  0 3px 14px 2px rgba(0,0,0,.12);\n      cursor: move;\n      z-index: 10;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  inputType: string;\n  options: any; // Options used in this framework\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  widgetOptions: any; // Options passed to child widget\n  formControl: any = null;\n  parentArray: any = null;\n  isOrderable = false;\n  dynamicTitle: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.layoutNode || !this.widgetOptions.removable ||\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n    if (this.dynamicTitle) { this.updateTitle(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options || {});\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options || {})\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      if (\n        isDefined(this.widgetOptions.minimum) &&\n        isDefined(this.widgetOptions.maximum) &&\n        this.widgetOptions.multipleOf >= 1\n      ) {\n        this.layoutNode.type = 'range';\n      }\n\n      if (\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\n        /{{.+?}}/.test(this.widgetOptions.title || '')\n      ) {\n        this.dynamicTitle = this.widgetOptions.title;\n        this.updateTitle();\n      }\n\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n        this.parentArray = this.jsf.getParentNode(this);\n        if (this.parentArray) {\n          this.isOrderable =\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\n            this.layoutNode.arrayItemType === 'list' &&\n            !this.widgetOptions.readonly &&\n            this.parentArray.options.orderable;\n        }\n      }\n\n      this.frameworkInitialized = true;\n    } else {\n      this.options = {};\n    }\n  }\n\n  updateTitle() {\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\n      this.dynamicTitle,\n      this.jsf.getFormControlValue(this),\n      this.jsf.getFormControlGroup(this).value,\n      this.dataIndex[this.dataIndex.length - 1]\n    );\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-file-widget',\n  template: ``,\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-input-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\n          [value]=\"word\">{{word}}</mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialInputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-number-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\n        [innerHTML]=\"controlValue\"></mat-hint>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialNumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-one-of-widget',\n  template: ``,\n})\nexport class MaterialOneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-radios-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-radio-group *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [name]=\"controlName\"\n        (blur)=\"options.showErrors = true\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    mat-radio-group { display: inline-flex; }\n    mat-radio-button { margin: 2px; }\n    mat-error { font-size: 75%; }\n  `]\n})\nexport class MaterialRadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  flexDirection = 'column';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline') {\n      this.flexDirection = 'row';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-select-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <mat-select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [attr.selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialSelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-slider-widget',\n  template: `\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      (blur)=\"options.showErrors = true\"></mat-slider>\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      [value]=\"controlValue\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\"></mat-slider>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialSliderComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-stepper-widget',\n  template: ``,\n})\nexport class MaterialStepperComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-tabs-widget',\n  template: `\n    <nav mat-tab-nav-bar\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\n      [style.width]=\"'100%'\">\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\n          [active]=\"selectedItem === i\"\n          (click)=\"select(i)\">\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\n        </a>\n    </nav>\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class MaterialTabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    this.itemCount = this.layoutNode.items.length - 1;\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    this.showAddTab = lastItem.type === '$ref' &&\n      this.itemCount < (lastItem.options.maxItems || 1000);\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-textarea-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <textarea matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <textarea matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialTextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\n// Material Design Framework\n// https://github.com/angular/material2\n\n@Injectable()\nexport class MaterialDesignFramework extends Framework {\n  name = 'material-design';\n\n  framework = MaterialDesignFrameworkComponent;\n\n  stylesheets = [\n    '//fonts.googleapis.com/icon?family=Material+Icons',\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\n  ];\n\n  widgets = {\n    'root':            FlexLayoutRootComponent,\n    'section':         FlexLayoutSectionComponent,\n    '$ref':            MaterialAddReferenceComponent,\n    'button':          MaterialButtonComponent,\n    'button-group':    MaterialButtonGroupComponent,\n    'checkbox':        MaterialCheckboxComponent,\n    'checkboxes':      MaterialCheckboxesComponent,\n    'chip-list':       MaterialChipListComponent,\n    'date':            MaterialDatepickerComponent,\n    'file':            MaterialFileComponent,\n    'number':          MaterialNumberComponent,\n    'one-of':          MaterialOneOfComponent,\n    'radios':          MaterialRadiosComponent,\n    'select':          MaterialSelectComponent,\n    'slider':          MaterialSliderComponent,\n    'stepper':         MaterialStepperComponent,\n    'tabs':            MaterialTabsComponent,\n    'text':            MaterialInputComponent,\n    'textarea':        MaterialTextareaComponent,\n    'alt-date':        'date',\n    'any-of':          'one-of',\n    'card':            'section',\n    'color':           'text',\n    'expansion-panel': 'section',\n    'hidden':          'none',\n    'image':           'none',\n    'integer':         'number',\n    'radiobuttons':    'button-group',\n    'range':           'slider',\n    'submit':          'button',\n    'tagsinput':       'chip-list',\n    'wizard':          'stepper',\n  };\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\n  MaterialButtonComponent, MaterialButtonGroupComponent,\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\n  MaterialChipListComponent, MaterialDatepickerComponent,\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\n  MaterialDesignFrameworkComponent\n];\n\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\nexport { MaterialOneOfComponent } from './material-one-of.component';\nexport { MaterialButtonComponent } from './material-button.component';\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nexport { MaterialChipListComponent } from './material-chip-list.component';\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\nexport { MaterialFileComponent } from './material-file.component';\nexport { MaterialInputComponent } from './material-input.component';\nexport { MaterialNumberComponent } from './material-number.component';\nexport { MaterialRadiosComponent } from './material-radios.component';\nexport { MaterialSelectComponent } from './material-select.component';\nexport { MaterialSliderComponent } from './material-slider.component';\nexport { MaterialStepperComponent } from './material-stepper.component';\nexport { MaterialTabsComponent } from './material-tabs.component';\nexport { MaterialTextareaComponent } from './material-textarea.component';\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n","import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\nimport { MaterialDesignFramework } from './material-design.framework';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n/**\n * unused @angular/material modules:\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\n * MatToolbarModule,\n */\nexport const ANGULAR_MATERIAL_MODULES = [\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule, JsonSchemaFormModule\n  ],\n  declarations: [...MATERIAL_FRAMEWORK_COMPONENTS],\n  exports: [JsonSchemaFormModule, ...MATERIAL_FRAMEWORK_COMPONENTS],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: MaterialDesignFramework, multi: true }\n  ],\n  entryComponents: [...MATERIAL_FRAMEWORK_COMPONENTS]\n})\nexport class MaterialDesignFrameworkModule { }\n","import _ from 'lodash';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-3-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n          <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      if (this.layoutNode.type !== 'flex')  {\n          this.options.htmlClass =\n            this.layoutNode.type === 'array' ?\n              addClasses(this.options.htmlClass, 'list-group') :\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n              addClasses(this.options.htmlClass, 'list-group-item') :\n              addClasses(this.options.htmlClass, 'form-group');\n      }\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n        break;\n        // Radio controls\n        case 'radio': case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n        break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Framework } from '../framework';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\n\n\n// Bootstrap 3 Framework\n// https://github.com/valor-software/ng2-bootstrap\n\n@Injectable()\nexport class Bootstrap3Framework extends Framework {\n  name = 'bootstrap-3';\n\n  framework = Bootstrap3FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\n  ];\n\n  scripts = [\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n  ];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\n\n\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap3FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap3FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap3Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap3FrameworkComponent]\n})\nexport class Bootstrap3FrameworkModule { }\n","import _ from 'lodash';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-4-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group');\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n          break;\n        // Radio controls\n        case 'radio': case 'radios':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n          break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\n\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4';\n\n  framework = Bootstrap4FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\n  ];\n\n  scripts = [\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\n  ];\n}\n","import { Bootstrap4Framework } from './bootstrap-4.framework';\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap4FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap4FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap4Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap4FrameworkComponent]\n})\nexport class Bootstrap4FrameworkModule { }\n"]}