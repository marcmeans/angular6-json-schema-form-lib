{"version":3,"file":"angular6-json-schema-form.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://angular6-json-schema-form/lib/shared/validator.functions.ts","ng://angular6-json-schema-form/lib/shared/utility.functions.ts","ng://angular6-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://angular6-json-schema-form/lib/shared/merge-schemas.function.ts","ng://angular6-json-schema-form/lib/shared/json-schema.functions.ts","ng://angular6-json-schema-form/lib/shared/format-regex.constants.ts","ng://angular6-json-schema-form/lib/shared/json.validators.ts","ng://angular6-json-schema-form/lib/shared/form-group.functions.ts","ng://angular6-json-schema-form/lib/shared/layout.functions.ts","ng://angular6-json-schema-form/lib/locale/en-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/fr-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/zh-validation-messages.ts","ng://angular6-json-schema-form/lib/json-schema-form.service.ts","ng://angular6-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://angular6-json-schema-form/lib/framework-library/framework.ts","ng://angular6-json-schema-form/lib/widget-library/add-reference.component.ts","ng://angular6-json-schema-form/lib/widget-library/button.component.ts","ng://angular6-json-schema-form/lib/widget-library/checkbox.component.ts","ng://angular6-json-schema-form/lib/shared/date.functions.ts","ng://angular6-json-schema-form/lib/shared/index.ts","ng://angular6-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://angular6-json-schema-form/lib/widget-library/file.component.ts","ng://angular6-json-schema-form/lib/widget-library/input.component.ts","ng://angular6-json-schema-form/lib/widget-library/message.component.ts","ng://angular6-json-schema-form/lib/widget-library/none.component.ts","ng://angular6-json-schema-form/lib/widget-library/number.component.ts","ng://angular6-json-schema-form/lib/widget-library/one-of.component.ts","ng://angular6-json-schema-form/lib/widget-library/radios.component.ts","ng://angular6-json-schema-form/lib/widget-library/root.component.ts","ng://angular6-json-schema-form/lib/widget-library/section.component.ts","ng://angular6-json-schema-form/lib/widget-library/select.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-framework.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-widget.component.ts","ng://angular6-json-schema-form/lib/widget-library/submit.component.ts","ng://angular6-json-schema-form/lib/widget-library/tabs.component.ts","ng://angular6-json-schema-form/lib/widget-library/template.component.ts","ng://angular6-json-schema-form/lib/widget-library/textarea.component.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.service.ts","ng://angular6-json-schema-form/lib/framework-library/framework-library.service.ts","ng://angular6-json-schema-form/lib/json-schema-form.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://angular6-json-schema-form/lib/widget-library/hidden.component.ts","ng://angular6-json-schema-form/lib/widget-library/tab.component.ts","ng://angular6-json-schema-form/lib/widget-library/orderable.directive.ts","ng://angular6-json-schema-form/lib/widget-library/index.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.module.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://angular6-json-schema-form/lib/json-schema-form.module.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts","ng://angular6-json-schema-form/public_api.ts","ng://angular6-json-schema-form/angular6-json-schema-form.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\nimport { from, Observable } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Object]';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item) ||\n    Object.prototype.toString.call(item) === '[object Array]';\n}\n\nexport function isDate(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {\n  hasValue,\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isMap,\n  isObject,\n  isSet,\n  isString,\n  PlainObject\n  } from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { copy, hasOwn } from './utility.functions';\nimport { Injectable } from '@angular/core';\nimport {\n  isArray,\n  isDefined,\n  isEmpty,\n  isMap,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\n\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          if (errors) {\n            console.error(`get error: \"${key}\" key not found in object.`);\n            console.error(pointer);\n            console.error(object);\n          }\n          return getBoolean ? false : undefined;\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (const item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (const [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      const newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      const parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    const results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (const key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (const key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    const keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = '';\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   *\n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (const pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  }\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   *\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      const pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    const controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (const key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      const parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","import _ from 'lodash';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || _.isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (_.isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description': case '$comment':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import _ from 'lodash';\nimport { forEach, hasOwn, mergeFilteredObject } from './utility.functions';\nimport {\n  getType,\n  hasValue,\n  inArray,\n  isArray,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { mergeSchemas } from './merge-schemas.function';\n\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  const newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (const key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true;\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  const controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      const itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n}\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  const newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        const [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  const validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          const eLimit = 'exclusive' + ucLimit;\n          const limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * //\n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * //\n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = _.cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = _.cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  // tslint:disable-next-line:max-line-length\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  // tslint:disable-next-line:max-line-length\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // tslint:disable-next-line:max-line-length\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // tslint:disable-next-line:max-line-length\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  // tslint:disable-next-line:max-line-length\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  // tslint:disable-next-line:max-line-length\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function (str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date' | 'time' | 'date-time' | 'email' | 'hostname' | 'ipv4' | 'ipv6' |\n  'uri' | 'uri-reference' | 'uri-template' | 'url' | 'uuid' | 'color' |\n  'json-pointer' | 'relative-json-pointer' | 'regex';\n","import _ from 'lodash';\nimport {\n  _executeAsyncValidators,\n  _executeValidators,\n  _mergeErrors,\n  _mergeObjects,\n  AsyncIValidatorFn,\n  getType,\n  hasValue,\n  isArray,\n  isBoolean,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isString,\n  isType,\n  IValidatorFn,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toObservable,\n  xor\n  } from './validator.functions';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { forEachCopy } from './utility.functions';\nimport { forkJoin } from 'rxjs';\nimport { JsonSchemaFormatNames, jsonSchemaFormatTests } from './format-regex.constants';\nimport { map } from 'rxjs/operators';\n\n\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  }\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        _.isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqual(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqual(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqual(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      const currentValue: string = control.value;\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      const currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (const requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              const requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const sorted: any[] = control.value.slice().sort();\n      const duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      const isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      const isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      const validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      const isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      const arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      const isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const error = validator(control, !invert);\n      const isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  }\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      // tslint:disable-next-line:max-line-length\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import _ from 'lodash';\nimport {\n  AbstractControl,\n  FormArray,\n  FormControl,\n  FormGroup,\n  ValidatorFn\n  } from '@angular/forms';\nimport { forEach, hasOwn } from './utility.functions';\nimport { getControlValidators, removeRecursiveReferences } from './json-schema.functions';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isDate,\n  isDefined,\n  isEmpty,\n  isObject,\n  isPrimitive,\n  SchemaPrimitiveType,\n  toJavaScriptType,\n  toSchemaType\n  } from './validator.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\n\n\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any, nodeValue: any = null, setValues = true,\n  schemaPointer = '', dataPointer = '', templatePointer = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (!isDefined(nodeValue) && (\n      jsf.formOptions.setSchemaDefaults === true ||\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n    )) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\n  const controlType =\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\n      schemaType === 'object' ? 'FormGroup' :\n      (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\n        schemaType === 'array' ? 'FormArray' :\n        !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\n  const shortDataPointer =\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has('schemaType')) {\n    nodeOptions.set('schemaPointer', schemaPointer);\n    nodeOptions.set('schemaType', schema.type);\n    if (schema.format) {\n      nodeOptions.set('schemaFormat', schema.format);\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\n    }\n    if (controlType) {\n      nodeOptions.set('templatePointer', templatePointer);\n      nodeOptions.set('templateType', controlType);\n    }\n  }\n  let controls: any;\n  const validators = getControlValidators(schema);\n  switch (controlType) {\n\n    case 'FormGroup':\n      controls = {};\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\n        const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n          const unnamedKeys = Object.keys(schema.properties)\n            .filter(key => !propertyKeys.includes(key));\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === '*') {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(key => hasOwn(schema.properties, key) ||\n            hasOwn(schema, 'additionalProperties')\n          )\n          .forEach(key => controls[key] = buildFormGroupTemplate(\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\n            schemaPointer + (hasOwn(schema.properties, key) ?\n              '/properties/' + key : '/additionalProperties'\n            ),\n            dataPointer + '/' + key,\n            templatePointer + '/controls/' + key\n          ));\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case 'FormArray':\n      controls = [];\n      const minItems =\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\n      const maxItems =\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\n        const tupleItems = nodeOptions.get('tupleItems') ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(buildFormGroupTemplate(\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\n              schemaPointer + '/items/' + i,\n              dataPointer + '/' + i,\n              templatePointer + '/controls/' + i\n            ));\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf, null, setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + '/controls/' + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaPointer + '/items/' + i,\n                  dataPointer + '/' + i,\n                  templatePointer + '/controls/' + i\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\n          additionalItemsPointer = schemaPointer + '/additionalItems';\n        }\n\n        // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + '/items';\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf, null, setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + '/controls/-'\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, 'required')) {\n          const arrayLength = Math.min(Math.max(\n            itemRecursive ? 0 :\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), maxItems);\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaRefPointer,\n                  dataPointer + '/-',\n                  templatePointer + '/controls/-'\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case '$ref':\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case 'FormControl':\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get('disabled') || false\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n*/\nexport function buildFormGroup(template: any): AbstractControl {\n  const validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  if (hasOwn(template, 'validators')) {\n    forEach(template.validators, (parameters, validator) => {\n      if (typeof JsonValidators[validator] === 'function') {\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\n      }\n    });\n    if (validatorFns.length &&\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\n    ) {\n      validatorFn = validatorFns.length > 1 ?\n        JsonValidators.compose(validatorFns) : validatorFns[0];\n    }\n  }\n  if (hasOwn(template, 'controlType')) {\n    switch (template.controlType) {\n      case 'FormGroup':\n        const groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          const newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) { groupControls[key] = newControl; }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case 'FormArray':\n        return new FormArray(_.filter(_.map(template.controls,\n          controls => buildFormGroup(controls)\n        )), validatorFn);\n      case 'FormControl':\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (const currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (typeof currentValue === 'object' &&\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [...currentValue];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== 'object') {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (const value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        const newValues = [];\n        for (const value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\n    requiredArray = forEach(requiredArray,\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any, dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\n  returnEmptyFields = false, fixErrors = false\n): any {\n  if (formData === null || typeof formData !== 'object') { return formData; }\n  const formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      const genericPointer =\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\n          dataMap.get(genericPointer).get('schemaType');\n        if (schemaType === 'null') {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if ((hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\n        ) {\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n          // If returnEmptyFields === false,\n          // only add empty arrays and objects to required keys\n        } else if (schemaType === 'object' && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\n            const keySchemaType =\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\n            if (keySchemaType === 'array') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === 'object') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n            // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n            // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (typeof value !== 'object' || isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error('formatFormData error: ' +\n          `Schema type not found for form value at ${genericPointer}`);\n        console.error('dataMap', dataMap);\n        console.error('recursiveRefMap', recursiveRefMap);\n        console.error('genericPointer', genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any, dataPointer: Pointer, returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === 'string') {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) { return formControl; }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (typeof formGroup.get === 'function' &&\n    dataPointerArray.every(key => key.indexOf('.') === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join('.'));\n    if (formControl) { return formControl; }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (const key of dataPointerArray) {\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\n    if (isArray(subGroup) && (key === '-')) {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import _ from 'lodash';\nimport {\n  checkInlineType,\n  getFromSchema,\n  getInputType,\n  isInputRequired,\n  removeRecursiveReferences,\n  updateInputOptions\n  } from './json-schema.functions';\nimport {\n  copy,\n  fixTitle,\n  forEach,\n  hasOwn\n  } from './utility.functions';\nimport {\n  inArray,\n  isArray,\n  isDefined,\n  isEmpty,\n  isNumber,\n  isObject,\n  isString\n  } from './validator.functions';\nimport { JsonPointer } from './jsonpointer.functions';\nimport { TitleMapItem } from '../json-schema-form.service';\n\n\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * //\n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    const newNode: any = {\n      _id: _.uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n          // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n          // Angular JSON Schema Form 'validationMessages'\n          // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code === '0' ? 'type' :\n                  code === '1' ? 'enum' :\n                    code === '100' ? 'multipleOf' :\n                      code === '101' ? 'minimum' :\n                        code === '102' ? 'exclusiveMinimum' :\n                          code === '103' ? 'maximum' :\n                            code === '104' ? 'exclusiveMaximum' :\n                              code === '200' ? 'minLength' :\n                                code === '201' ? 'maxLength' :\n                                  code === '202' ? 'pattern' :\n                                    code === '300' ? 'minProperties' :\n                                      code === '301' ? 'maxProperties' :\n                                        code === '302' ? 'required' :\n                                          code === '304' ? 'dependencies' :\n                                            code === '400' ? 'minItems' :\n                                              code === '401' ? 'maxItems' :\n                                                code === '402' ? 'uniqueItems' :\n                                                  code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n        // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (const item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        const itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          const arrayItemGroup = [];\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            const subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              const arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: _.uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n            newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            _.cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n            // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: _.uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = _.cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: _.cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: _.uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * //\n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : _.uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems);\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n      // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: _.uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n      // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * //\n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    const realIndex = +index + indexPad;\n    const newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n}\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = _.cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n    // Otherwise, return referenced layout\n  } else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = _.cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = _.uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (const i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (const i of Object.keys(enumList)) {\n        const value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          const name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (const value of Object.keys(titleMap)) {\n        const name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (const i of Object.keys(enumList)) {\n      const name = enumList[i];\n      const value = enumList[i];\n      newTitleMap.push({ name, value });\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [{ name: 'True', value: true }, { name: 'False', value: false }];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n      // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const zhValidationMessages: any = { // Chinese error messages\n  required: 'å¿å¡«å­æ®µ.',\n  minLength: 'å­ç¬¦é¿åº¦å¿é¡»å¤§äºæèç­äº {{minimumLength}} (å½åé¿åº¦: {{currentLength}})',\n  maxLength: 'å­ç¬¦é¿åº¦å¿é¡»å°äºæèç­äº {{maximumLength}} (å½åé¿åº¦: {{currentLength}})',\n  pattern: 'å¿é¡»å¹éæ­£åè¡¨è¾¾å¼: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'å¿é¡»ä¸ºæ¥ææ ¼å¼, æ¯å¦ \"2000-12-31\"';\n      case 'time':\n        return 'å¿é¡»ä¸ºæ¶é´æ ¼å¼, æ¯å¦ \"16:20\" æè \"03:14:15.9265\"';\n      case 'date-time':\n        return 'å¿é¡»ä¸ºæ¥ææ¶é´æ ¼å¼, æ¯å¦ \"2000-03-14T01:59\" æè \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'å¿é¡»ä¸ºé®ç®±å°å, æ¯å¦ \"name@example.com\"';\n      case 'hostname':\n        return 'å¿é¡»ä¸ºä¸»æºå, æ¯å¦ \"example.com\"';\n      case 'ipv4':\n        return 'å¿é¡»ä¸º IPv4 å°å, æ¯å¦ \"127.0.0.1\"';\n      case 'ipv6':\n        return 'å¿é¡»ä¸º IPv6 å°å, æ¯å¦ \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'å¿é¡»ä¸º url, æ¯å¦ \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'å¿é¡»ä¸º uuid, æ¯å¦ \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'å¿é¡»ä¸ºé¢è²å¼, æ¯å¦ \"#FFFFFF\" æè \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'å¿é¡»ä¸º JSON Pointer, æ¯å¦ \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'å¿é¡»ä¸ºç¸å¯¹ç JSON Pointer, æ¯å¦ \"2/pointer/to/something\"';\n      case 'regex':\n        return 'å¿é¡»ä¸ºæ­£åè¡¨è¾¾å¼, æ¯å¦ \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'å¿é¡»ä¸ºæ ¼å¼æ­£ç¡®ç ' + error.requiredFormat;\n    }\n  },\n  minimum: 'å¿é¡»å¤§äºæèç­äºæå°å¼: {{minimumValue}}',\n  exclusiveMinimum: 'å¿é¡»å¤§äºæå°å¼: {{exclusiveMinimumValue}}',\n  maximum: 'å¿é¡»å°äºæèç­äºæå¤§å¼: {{maximumValue}}',\n  exclusiveMaximum: 'å¿é¡»å°äºæå¤§å¼: {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `å¿é¡»æ ${decimals} ä½ææ´å°çå°æ°ä½`;\n    } else {\n      return `å¿é¡»ä¸º ${error.multipleOfValue} çåæ°`;\n    }\n  },\n  minProperties: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  maxProperties: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumProperties}} (å½åé¡¹ç®æ°: {{currentProperties}})',\n  minItems: 'é¡¹ç®æ°å¿é¡»å¤§äºæèç­äº {{minimumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  maxItems: 'é¡¹ç®æ°å¿é¡»å°äºæèç­äº {{maximumItems}} (å½åé¡¹ç®æ°: {{currentItems}})',\n  uniqueItems: 'ææé¡¹ç®å¿é¡»æ¯å¯ä¸ç',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import _ from 'lodash';\nimport Ajv from 'ajv';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport {\n  buildFormGroup,\n  buildFormGroupTemplate,\n  formatFormData,\n  getControl\n  } from './shared/form-group.functions';\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\nimport { buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences } from './shared/json-schema.functions';\nimport { enValidationMessages } from './locale/en-validation-messages';\nimport { frValidationMessages } from './locale/fr-validation-messages';\nimport { zhValidationMessages } from './locale/zh-validation-messages';\nimport {\n  fixTitle,\n  forEach,\n  hasOwn,\n  toTitleCase\n  } from './shared/utility.functions';\nimport {\n  hasValue,\n  isArray,\n  isDefined,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { Injectable } from '@angular/core';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { Subject } from 'rxjs';\n\n\n\nexport interface TitleMapItem {\n  name?: string; value?: any; checked?: boolean; group?: string; items?: TitleMapItem[];\n}\nexport interface ErrorMessages {\n  [control_name: string]: { message: string | Function | Object, code: string }[];\n}\n\n\n@Injectable()\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = 'en-US'; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\n    // for addSubmit: true = always, false = never,\n    // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: 'no-framework', // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\n    // true = always set (unless overridden by layout default or formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\n    // true = always set (unless overridden by formValues)\n    // false = never set\n    // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\n    // true = validate all fields immediately\n    // false = only validate fields after they are touched by user\n    // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: { // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {} // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n  }\n\n  setLanguage(language: string = 'en-US') {\n    this.language = language;\n    const languageValidationMessages = {\n        fr: frValidationMessages,\n        en: enValidationMessages,\n        zh: zhValidationMessages\n    };\n    const languageCode = language.slice(0, 2);\n\n    const validationMessages = languageValidationMessages[languageCode];\n\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\n      _.cloneDeep(validationMessages);\n  }\n\n  getData() { return this.data; }\n\n  getSchema() { return this.schema; }\n\n  getLayout() { return this.layout; }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = _.cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error['code']] = error['message'];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue, this.dataMap, this.dataRecursiveRefMap,\n      this.arrayMap, this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = errors => {\n      const compiledErrors = {};\n      (errors || []).forEach(error => {\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\n      this.formValueSubscription = this.formGroup.valueChanges\n        .subscribe(formValue => this.validateData(formValue));\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = _.cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      ['ErrorState', 'SuccessState']\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\n        .forEach(suffix => {\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\n          delete globalDefaults['disable' + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties['ui:order'])) {\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\n        delete this.schema.properties['ui:order'];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) { return buildSchemaFromLayout(layout); }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = '', value: any = {}, values: any = {}, key: number | string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = '', value: any = {}, values: any = {},\n    key: number | string = null, tpldata: any = null\n  ) {\n    if (typeof expression !== 'string') { return ''; }\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\n    expression = expression.trim();\n    if ((expression[0] === '\\'' || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === 'idx' || expression === '$index') { return index; }\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\n    if (['\"', '\\'', ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\n        JsonPointer.get(value, pointer.slice(1)) :\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\n          JsonPointer.get(values, pointer.slice(1)) :\n          pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\n            JsonPointer.get(tpldata, pointer.slice(1)) :\n            JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\n    }\n    if (expression.indexOf('[idx]') > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf('[$index]') > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf('||') > -1) {\n      return expression.split('||').reduce((all, term) =>\n        all || this.parseExpression(term, value, values, key, tpldata), ''\n      );\n    }\n    if (expression.indexOf('&&') > -1) {\n      return expression.split('&&').reduce((all, term) =>\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\n      ).trim();\n    }\n    if (expression.indexOf('+') > -1) {\n      return expression.split('+')\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\n        .join('');\n    }\n    return '';\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {}, childNode: any = null, index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== '$ref' ? [\n        [childNode, '/options/legend'],\n        [childNode, '/options/title'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend'],\n      ] : [\n          [childNode, '/options/title'],\n          [childNode, '/options/legend'],\n          [parentNode, '/options/title'],\n          [parentNode, '/options/legend']\n        ]\n    );\n    if (!text) { return text; }\n    const childValue = isArray(parentValues) && index < parentValues.length ?\n      parentValues[index] : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\n      null :\n      this.parseText(\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\n        this.getFormControlValue(this),\n        (this.getFormControlGroup(this) || <any>{}).value,\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === 'string') {\n        let pointer = layoutNode.options.condition;\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === 'model') {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === 'function') {\n        result = layoutNode.options.condition(this.data);\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\n        try {\n          const dynFn = new Function(\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error('condition functionBody errored out on evaluation: ' + layoutNode.options.condition.functionBody);\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) { return false; }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\n        ctx.layoutNode.options : _.cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\n      ctx.formControl.statusChanges.subscribe(status =>\n        ctx.options.errorMessage = status === 'VALID' ? null :\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\n      );\n      ctx.formControl.valueChanges.subscribe(value => {\n        if (!!value) { ctx.controlValue = value; }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) { return null; }\n    if (!isObject(validationMessages)) { validationMessages = {}; }\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\n    const formatError = (error) => typeof error === 'object' ?\n      Object.keys(error).map(key =>\n        error[key] === true ? addSpaces(key) :\n          error[key] === false ? 'Not ' + addSpaces(key) :\n            addSpaces(key) + ': ' + formatError(error[key])\n      ).join(', ') :\n      addSpaces(error.toString());\n    const messages = [];\n    return Object.keys(errors)\n      // Hide 'required' error, unless it is the only one\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\n      .map(errorKey =>\n        // If validationMessages is a string, return it\n        typeof validationMessages === 'string' ? validationMessages :\n          // If custom error message is a function, return function result\n          typeof validationMessages[errorKey] === 'function' ?\n            validationMessages[errorKey](errors[errorKey]) :\n            // If custom error message is a string, replace placeholders and return\n            typeof validationMessages[errorKey] === 'string' ?\n              // Does error message have any {{property}} placeholders?\n              !/{{.+?}}/.test(validationMessages[errorKey]) ?\n                validationMessages[errorKey] :\n                // Replace {{property}} placeholders with values\n                Object.keys(errors[errorKey])\n                  .reduce((errorMessage, errorProperty) => errorMessage.replace(\n                    new RegExp('{{' + errorProperty + '}}', 'g'),\n                    errors[errorKey][errorProperty]\n                  ), validationMessages[errorKey]) :\n              // If no custom error message, return formatted error data instead\n              addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\n      ).join('<br>');\n  }\n\n  updateValue(ctx: any, value: any): void {\n\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) { formArray.removeAt(0); }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) { return null; }\n    return '/' + ctx.layoutIndex.join('/items/');\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return false; }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else { // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\n    ) { return false; }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx))\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\n    } else { // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .removeControl(this.getFormControlName(ctx));\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import _ from 'lodash';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean; draft?: number; }\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft }))];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [convertSchemaToDraft6(newSchema.extends, { changed, draft })];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [newSchema.dependencies[key]]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [properties[key].requires] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription;\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n        // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n          // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = ['additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = ['multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = ['maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = ['maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array': [...numberKeys, ...objectKeys, ...stringKeys],\n            'integer': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'number': [...arrayKeys, ...objectKeys, ...stringKeys],\n            'object': [...arrayKeys, ...numberKeys, ...stringKeys],\n            'string': [...arrayKeys, ...numberKeys, ...objectKeys],\n            'all': [...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![...(filterKeys[newType.type] || filterKeys.all), 'type', 'default']\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n          // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        ['definitions', 'dependencies', 'properties', 'patternProperties']\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        ['items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not'].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = _.cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","/**\n * 'dateToString' function\n *\n * //  { Date | string } date\n * //   options\n * // { string }\n */\nexport function dateToString(date, options: any = {}) {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  if (typeof date === 'string') { date = stringToDate(date); }\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dateFormat\n    .replace(/YYYY/ig, date.getFullYear() + '')\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\n    .replace(/M/ig, (date.getMonth() + 1) + '')\n    .replace(/DDDD/ig, longDays[date.getDay()])\n    .replace(/DDD/ig, shortDays[date.getDay()])\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\n    .replace(/D/ig, date.getDate() + '')\n    .replace(/S/ig, ordinal(date.getDate()));\n}\n\nexport function ordinal(number: number|string): string {\n  if (typeof number === 'number') { number = number + ''; }\n  const last = number.slice(-1);\n  const nextToLast = number.slice(-2, 1);\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\n}\n\n/**\n * 'stringToDate' function\n *\n * //  { string } dateString\n * // { Date }\n */\nexport function stringToDate(dateString) {\n  const getDate: string = findDate(dateString);\n  if (!getDate) { return null; }\n  let dateParts: number[] = [];\n  // Split x-y-z to [x, y, z]\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\n  // Split xxxxyyzz to [xxxx, yy, zz]\n  } else if (/^\\d{8}$/.test(getDate)) {\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\n  }\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\n  // Check for [YYYY, MM, DD]\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n  // Check for [MM, DD, YYYY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n  // Check for [MM, DD, YY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\n    return new Date(year, dateParts[0] - 1, dateParts[1]);\n  // Check for [YY, MM, DD]\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\n    return new Date(year, dateParts[1] - 1, dateParts[2]);\n  }\n  return null;\n}\n\n/**\n * 'findDate' function\n *\n * //  { string } text\n * // { string }\n */\nexport function findDate(text) {\n  if (!text) { return null; }\n  let foundDate: any[];\n  // Match ...YYYY-MM-DD...\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match ...MM-DD-YYYY...\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match MM-DD-YY...\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YY-MM-DD...\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YYYYMMDD...\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\n  if (foundDate) { return foundDate[0]; }\n}\n","// Warning: Changing the following order may cause errors if the new order\n// causes a library to be imported before another library it depends on.\n\nexport {\n  _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors,\n  isDefined, hasValue, isEmpty, isString, isNumber, isInteger, isBoolean,\n  isFunction, isObject, isArray, isDate, isMap, isSet, isPromise, isObservable,\n  getType, isType, isPrimitive, toJavaScriptType, toSchemaType, _toPromise,\n  toObservable, inArray, xor, SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType,\n  JavaScriptType, PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n} from './validator.functions';\n\nexport {\n  addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n  uniqueItems, commonItems, fixTitle, toTitleCase\n} from './utility.functions';\n\nexport { Pointer, JsonPointer } from './jsonpointer.functions';\n\nexport { JsonValidators } from './json.validators';\n\nexport {\n  buildSchemaFromLayout, buildSchemaFromData, getFromSchema,\n  removeRecursiveReferences, getInputType, checkInlineType, isInputRequired,\n  updateInputOptions, getTitleMapFromOneOf, getControlValidators,\n  resolveSchemaReferences, getSubSchema, combineAllOf, fixRequiredArrayProperties\n} from './json-schema.functions';\n\nexport { convertSchemaToDraft6 } from './convert-schema-to-draft6.function';\n\nexport { mergeSchemas } from './merge-schemas.function';\n\nexport {\n  buildFormGroupTemplate, buildFormGroup, formatFormData,\n  getControl, setRequiredFields\n} from './form-group.functions';\n\nexport {\n  buildLayout, buildLayoutFromSchema, mapLayout, getLayoutNode, buildTitleMap\n} from './layout.functions';\n\nexport { dateToString, stringToDate, findDate } from './date.functions';\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (const checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../shared/utility.functions';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Input,\n  OnChanges,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (const input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Injectable } from '@angular/core';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable()\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (const widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        const usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Framework } from './framework';\nimport { hasOwn } from '../shared/utility.functions';\nimport { Inject, Injectable } from '@angular/core';\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable()\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import _ from 'lodash';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport {\n  hasValue,\n  inArray,\n  isArray,\n  isEmpty,\n  isObject\n  } from './shared/validator.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\n\n\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n};\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output: <pre>{{debugOutput}}</pre>\n    </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n    schema: null, layout: null, data: null, options: null, framework: null,\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n    formData: null, loadExternalAssets: null, debug: null,\n  };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any|string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  }\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return stylesheets.map(stylesheet => load(stylesheet));\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return scripts.map(script => load(script));\n  }\n\n  ngOnInit() {\n    this.updateForm();\n  }\n\n  ngOnChanges() {\n    this.updateForm();\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !_.isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n      // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n                                  // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = _.cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = _.cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n        // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = _.cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = _.cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    };\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = _.cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = _.cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = _.cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n          // Copy other alternate layout options to schema 'x-schema-form',\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'no-framework',\n  template: `\n    <select-widget-widget\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { NoFrameworkComponent } from './no-framework.component';\n// No framework - plain HTML controls (styles from form layout only)\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { OneOfComponent } from './one-of.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { OrderableDirective } from './orderable.directive';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\nexport { WidgetLibraryService } from './widget-library.service';\n","import { BASIC_WIDGETS } from './index';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OrderableDirective } from './orderable.directive';\n\n@NgModule({\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\n  entryComponents: [ ...BASIC_WIDGETS ],\n  providers:       [ JsonSchemaFormService ]\n})\nexport class WidgetLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WidgetLibraryModule,\n      providers: [ JsonSchemaFormService ]\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NoFramework } from './no.framework';\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n// No framework - plain HTML controls (styles from form layout only)\n\n@NgModule({\n  imports: [CommonModule, WidgetLibraryModule],\n  declarations: [NoFrameworkComponent],\n  exports: [NoFrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: NoFramework, multi: true }\n  ],\n  entryComponents: [NoFrameworkComponent]\n})\nexport class NoFrameworkModule { }\n","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\nimport { NgModule } from '@angular/core';\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\n})\nexport class JsonSchemaFormModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-root-widget',\n  template: `\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\n      [style.order]=\"layoutNode?.options?.order\"\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\n    <div>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FlexLayoutRootComponent {\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  removeItem(item) {\n    this.jsf.removeItem(item);\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in flex-layout-section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flex-layout-section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>\n\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </fieldset>\n\n    <mat-card *ngIf=\"containerType === 'card'\"\n      [ngClass]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <mat-card-header *ngIf=\"sectionTitle\">\n        <legend\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n          [innerHTML]=\"sectionTitle\"\n          (click)=\"toggleExpanded()\"></legend>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"expanded\">\n        <fieldset [disabled]=\"options?.readonly\">\n          <flex-layout-root-widget *ngIf=\"expanded\"\n            [layout]=\"layoutNode.items\"\n            [dataIndex]=\"dataIndex\"\n            [layoutIndex]=\"layoutIndex\"\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n            [style.display]=\"getFlexAttribute('display')\"\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\n            [style.align-items]=\"getFlexAttribute('align-items')\"\n            [style.align-content]=\"getFlexAttribute('align-content')\"\n            [fxLayout]=\"getFlexAttribute('layout')\"\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n          </fieldset>\n      </mat-card-content>\n      <mat-card-footer>\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\n      </mat-card-footer>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\n      [expanded]=\"expanded\"\n      [hideToggle]=\"!options?.expandable\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <legend *ngIf=\"sectionTitle\"\n            [class]=\"options?.labelHtmlClass\"\n            [innerHTML]=\"sectionTitle\"\n            (click)=\"toggleExpanded()\"></legend>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <fieldset [disabled]=\"options?.readonly\">\n        <flex-layout-root-widget *ngIf=\"expanded\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n          [style.display]=\"getFlexAttribute('display')\"\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\n          [style.align-items]=\"getFlexAttribute('align-items')\"\n          [style.align-content]=\"getFlexAttribute('align-content')\"\n          [fxLayout]=\"getFlexAttribute('layout')\"\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      </fieldset>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </mat-expansion-panel>`,\n  styles: [`\n    fieldset { border: 0; margin: 0; padding: 0; }\n    .legend { font-weight: bold; }\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class FlexLayoutSectionComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  expanded = true;\n  containerType = 'div';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n        break;\n      case 'card':\n        this.containerType = 'card';\n        break;\n      case 'expansion-panel':\n        this.containerType = 'expansion-panel';\n        break;\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\n        this.containerType = 'div';\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in flex-layout-root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    // if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n      case 'layout':\n        return (this.options.fxLayout || 'row') +\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\n\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-add-reference-widget',\n  template: `\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\n      <button mat-raised-button *ngIf=\"showAddButton\"\n        [color]=\"options?.color || 'accent'\"\n        [disabled]=\"options?.readonly\"\n        (click)=\"addItem($event)\">\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n      </button>\n    </section>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MaterialAddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this),\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { hasOwn } from '../../shared/utility.functions';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-widget',\n  template: `\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\n      <button mat-raised-button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n    styles: [` button { margin-top: 10px; } `],\n})\nexport class MaterialButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-button-group-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-button-toggle-group\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        [vertical]=\"!!options.vertical\">\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialButtonGroupComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  radiosList: any[] = [];\n  vertical = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkbox-widget',\n  template: `\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  showSlideToggle = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = false;\n      this.jsf.updateValue(this, this.falseValue);\n    }\n    if (this.layoutNode.type === 'slide-toggle' ||\n      this.layoutNode.format === 'slide-toggle'\n    ) {\n      this.showSlideToggle = true;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\n\n// TODO: Change this to use a Selection List instead?\n// https://material.angular.io/components/list/overview\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-checkboxes-widget',\n  template: `\n    <div>\n      <mat-checkbox type=\"checkbox\"\n        [checked]=\"allChecked\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [indeterminate]=\"someChecked\"\n        [name]=\"options?.name\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateAllValues($event)\">\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\n      </mat-checkbox>\n      <label *ngIf=\"options?.title\"\n        class=\"title\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\n        <li *ngFor=\"let checkboxItem of checkboxList\"\n          [class]=\"options?.htmlClass || ''\">\n          <mat-checkbox type=\"checkbox\"\n            [(ngModel)]=\"checkboxItem.checked\"\n            [color]=\"options?.color || 'primary'\"\n            [disabled]=\"controlDisabled || options?.readonly\"\n            [name]=\"checkboxItem?.name\"\n            (blur)=\"options.showErrors = true\"\n            (change)=\"updateValue()\">\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\n          </mat-checkbox>\n        </li>\n      </ul>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    .title { font-weight: bold; }\n    .checkbox-list { list-style-type: none; }\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  horizontalList = false;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      for (const checkboxItem of this.checkboxList) {\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\n      }\n    }\n  }\n\n  get allChecked(): boolean {\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\n  }\n\n  get someChecked(): boolean {\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\n  }\n\n  updateValue() {\n    this.options.showErrors = true;\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n\n  updateAllValues(event: any) {\n    this.options.showErrors = true;\n    this.checkboxList.forEach(t => t.checked = event.checked);\n    this.updateValue();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-chip-list-widget',\n  template: ``,\n})\nexport class MaterialChipListComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { dateToString, stringToDate } from '../../shared';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-datepicker-widget',\n  template: `\n    <mat-form-field [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n        <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [readonly]=\"options?.readonly\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"dateValue\"\n        [readonly]=\"options?.readonly\"\n        (blur)=\"options.showErrors = true\"\n        (dateChange)=\"updateValue($event)\"\n        (dateInput)=\"updateValue($event)\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    </mat-form-field>\n    <mat-datepicker #picker ></mat-datepicker>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialDatepickerComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  dateValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    this.setControlDate(this.controlValue);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  setControlDate(dateString: string) {\n    this.dateValue = stringToDate(dateString);\n    this.setDate(this.dateValue);\n  }\n  \n  updateValue(event) {\n    this.options.showErrors = true;\n    if (event.value) this.setDate(dateToString(event.value));\n  }\n\n  setDate(date){\n    this.formControl.setValue(date, this.options);\n  }\n\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport _ from 'lodash';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { isDefined } from '../../shared';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-design-framework',\n  template: `\n    <div\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\n      [orderable]=\"isOrderable\"\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"widgetLayoutNode\">\n      <svg *ngIf=\"showRemoveButton\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\n        class=\"close-button\"\n        (click)=\"removeItem()\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\n      </svg>\n      <select-widget-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\n    </div>\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\n  styles: [`\n    .array-item {\n      border-radius: 2px;\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n                  0 2px 2px  0   rgba(0,0,0,.14),\n                  0 1px 5px  0   rgba(0,0,0,.12);\n      padding: 6px;\n      position: relative;\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\n    }\n    .close-button {\n      cursor: pointer;\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      fill: rgba(0,0,0,.4);\n      visibility: hidden;\n      z-index: 500;\n    }\n    .close-button:hover { fill: rgba(0,0,0,.8); }\n    .array-item:hover > .close-button { visibility: visible; }\n    .spacer { margin: 6px 0; }\n    [draggable=true]:hover {\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\n                  0 8px 10px 1px rgba(0,0,0,.14),\n                  0 3px 14px 2px rgba(0,0,0,.12);\n      cursor: move;\n      z-index: 10;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  inputType: string;\n  options: any; // Options used in this framework\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  widgetOptions: any; // Options passed to child widget\n  formControl: any = null;\n  parentArray: any = null;\n  isOrderable = false;\n  dynamicTitle: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.layoutNode || !this.widgetOptions.removable ||\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n    if (this.dynamicTitle) { this.updateTitle(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options || {});\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options || {})\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      if (\n        isDefined(this.widgetOptions.minimum) &&\n        isDefined(this.widgetOptions.maximum) &&\n        this.widgetOptions.multipleOf >= 1\n      ) {\n        this.layoutNode.type = 'range';\n      }\n\n      if (\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\n        /{{.+?}}/.test(this.widgetOptions.title || '')\n      ) {\n        this.dynamicTitle = this.widgetOptions.title;\n        this.updateTitle();\n      }\n\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n        this.parentArray = this.jsf.getParentNode(this);\n        if (this.parentArray) {\n          this.isOrderable =\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\n            this.layoutNode.arrayItemType === 'list' &&\n            !this.widgetOptions.readonly &&\n            this.parentArray.options.orderable;\n        }\n      }\n\n      this.frameworkInitialized = true;\n    } else {\n      this.options = {};\n    }\n  }\n\n  updateTitle() {\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\n      this.dynamicTitle,\n      this.jsf.getFormControlValue(this),\n      this.jsf.getFormControlGroup(this).value,\n      this.dataIndex[this.dataIndex.length - 1]\n    );\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-file-widget',\n  template: ``,\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-input-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\n          [value]=\"word\">{{word}}</mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialInputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-number-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\n        [innerHTML]=\"controlValue\"></mat-hint>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialNumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-one-of-widget',\n  template: ``,\n})\nexport class MaterialOneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-radios-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-radio-group *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [name]=\"controlName\"\n        (blur)=\"options.showErrors = true\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    mat-radio-group { display: inline-flex; }\n    mat-radio-button { margin: 2px; }\n    mat-error { font-size: 75%; }\n  `]\n})\nexport class MaterialRadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  flexDirection = 'column';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline') {\n      this.flexDirection = 'row';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { buildTitleMap, isArray } from '../../shared';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-select-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <mat-select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [attr.selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialSelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-slider-widget',\n  template: `\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      (blur)=\"options.showErrors = true\"></mat-slider>\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      [value]=\"controlValue\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\"></mat-slider>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialSliderComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-stepper-widget',\n  template: ``,\n})\nexport class MaterialStepperComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-tabs-widget',\n  template: `\n    <nav mat-tab-nav-bar\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\n      [style.width]=\"'100%'\">\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\n          [active]=\"selectedItem === i\"\n          (click)=\"select(i)\">\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\n        </a>\n    </nav>\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class MaterialTabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    }\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    this.itemCount = this.layoutNode.items.length - 1;\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    this.showAddTab = lastItem.type === '$ref' &&\n      this.itemCount < (lastItem.options.maxItems || 1000);\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'material-textarea-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <textarea matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <textarea matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep json-schema-form mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialTextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\n// Material Design Framework\n// https://github.com/angular/material2\n\n@Injectable()\nexport class MaterialDesignFramework extends Framework {\n  name = 'material-design';\n\n  framework = MaterialDesignFrameworkComponent;\n\n  stylesheets = [\n    '//fonts.googleapis.com/icon?family=Material+Icons',\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\n  ];\n\n  widgets = {\n    'root':            FlexLayoutRootComponent,\n    'section':         FlexLayoutSectionComponent,\n    '$ref':            MaterialAddReferenceComponent,\n    'button':          MaterialButtonComponent,\n    'button-group':    MaterialButtonGroupComponent,\n    'checkbox':        MaterialCheckboxComponent,\n    'checkboxes':      MaterialCheckboxesComponent,\n    'chip-list':       MaterialChipListComponent,\n    'date':            MaterialDatepickerComponent,\n    'file':            MaterialFileComponent,\n    'number':          MaterialNumberComponent,\n    'one-of':          MaterialOneOfComponent,\n    'radios':          MaterialRadiosComponent,\n    'select':          MaterialSelectComponent,\n    'slider':          MaterialSliderComponent,\n    'stepper':         MaterialStepperComponent,\n    'tabs':            MaterialTabsComponent,\n    'text':            MaterialInputComponent,\n    'textarea':        MaterialTextareaComponent,\n    'alt-date':        'date',\n    'any-of':          'one-of',\n    'card':            'section',\n    'color':           'text',\n    'expansion-panel': 'section',\n    'hidden':          'none',\n    'image':           'none',\n    'integer':         'number',\n    'radiobuttons':    'button-group',\n    'range':           'slider',\n    'submit':          'button',\n    'tagsinput':       'chip-list',\n    'wizard':          'stepper',\n  };\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\n\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\n  MaterialButtonComponent, MaterialButtonGroupComponent,\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\n  MaterialChipListComponent, MaterialDatepickerComponent,\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\n  MaterialDesignFrameworkComponent\n];\n\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\nexport { MaterialOneOfComponent } from './material-one-of.component';\nexport { MaterialButtonComponent } from './material-button.component';\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nexport { MaterialChipListComponent } from './material-chip-list.component';\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\nexport { MaterialFileComponent } from './material-file.component';\nexport { MaterialInputComponent } from './material-input.component';\nexport { MaterialNumberComponent } from './material-number.component';\nexport { MaterialRadiosComponent } from './material-radios.component';\nexport { MaterialSelectComponent } from './material-select.component';\nexport { MaterialSliderComponent } from './material-slider.component';\nexport { MaterialStepperComponent } from './material-stepper.component';\nexport { MaterialTabsComponent } from './material-tabs.component';\nexport { MaterialTextareaComponent } from './material-textarea.component';\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n","import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatTooltipModule\n  } from '@angular/material';\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\nimport { MaterialDesignFramework } from './material-design.framework';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n/**\n * unused @angular/material modules:\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\n * MatToolbarModule,\n */\nexport const ANGULAR_MATERIAL_MODULES = [\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule, JsonSchemaFormModule\n  ],\n  declarations: [...MATERIAL_FRAMEWORK_COMPONENTS],\n  exports: [JsonSchemaFormModule, ...MATERIAL_FRAMEWORK_COMPONENTS],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: MaterialDesignFramework, multi: true }\n  ],\n  entryComponents: [...MATERIAL_FRAMEWORK_COMPONENTS]\n})\nexport class MaterialDesignFrameworkModule { }\n","import _ from 'lodash';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n\n\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-3-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n          <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      if (this.layoutNode.type !== 'flex')  {\n          this.options.htmlClass =\n            this.layoutNode.type === 'array' ?\n              addClasses(this.options.htmlClass, 'list-group') :\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n              addClasses(this.options.htmlClass, 'list-group-item') :\n              addClasses(this.options.htmlClass, 'form-group');\n      }\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n        break;\n        // Radio controls\n        case 'radio': case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n        break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Framework } from '../framework';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\n\n\n// Bootstrap 3 Framework\n// https://github.com/valor-software/ng2-bootstrap\n\n@Injectable()\nexport class Bootstrap3Framework extends Framework {\n  name = 'bootstrap-3';\n\n  framework = Bootstrap3FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\n  ];\n\n  scripts = [\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n  ];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\n\n\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap3FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap3FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap3Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap3FrameworkComponent]\n})\nexport class Bootstrap3FrameworkModule { }\n","import _ from 'lodash';\nimport { addClasses, inArray } from '../../shared';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnInit\n  } from '@angular/core';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bootstrap-4-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group');\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n          break;\n        // Radio controls\n        case 'radio': case 'radios':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n          break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { Framework } from '../framework';\nimport { Injectable } from '@angular/core';\n\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4';\n\n  framework = Bootstrap4FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\n  ];\n\n  scripts = [\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\n  ];\n}\n","import { Bootstrap4Framework } from './bootstrap-4.framework';\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { CommonModule } from '@angular/common';\nimport { Framework } from '../framework';\nimport { FrameworkLibraryService } from '../framework-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { NgModule } from '@angular/core';\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap4FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap4FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap4Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap4FrameworkComponent]\n})\nexport class Bootstrap4FrameworkModule { }\n","/*\n * Public API Surface of json-schema-form\n */\n\nexport * from './lib/json-schema-form.service';\nexport * from './lib/json-schema-form.component';\nexport * from './lib/json-schema-form.module';\nexport * from './lib/framework-library';\nexport * from './lib/widget-library';\nexport * from './lib/shared';\nexport * from './lib/framework-library/material-design-framework/material-design-framework.module';\nexport * from './lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module';\nexport * from './lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module';\nexport * from './lib/framework-library/no-framework/no-framework.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {Bootstrap3FrameworkComponent as Éµca} from './lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component';\nexport {Bootstrap3Framework as Éµcb} from './lib/framework-library/bootstrap-3-framework/bootstrap-3.framework';\nexport {Bootstrap4FrameworkComponent as Éµcc} from './lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component';\nexport {Bootstrap4Framework as Éµcd} from './lib/framework-library/bootstrap-4-framework/bootstrap-4.framework';\nexport {Framework as Éµb} from './lib/framework-library/framework';\nexport {FrameworkLibraryService as Éµa} from './lib/framework-library/framework-library.service';\nexport {FlexLayoutRootComponent as Éµbf} from './lib/framework-library/material-design-framework/flex-layout-root.component';\nexport {FlexLayoutSectionComponent as Éµbg} from './lib/framework-library/material-design-framework/flex-layout-section.component';\nexport {MATERIAL_FRAMEWORK_COMPONENTS as Éµbe} from './lib/framework-library/material-design-framework/index';\nexport {MaterialAddReferenceComponent as Éµbh} from './lib/framework-library/material-design-framework/material-add-reference.component';\nexport {MaterialButtonGroupComponent as Éµbk} from './lib/framework-library/material-design-framework/material-button-group.component';\nexport {MaterialButtonComponent as Éµbj} from './lib/framework-library/material-design-framework/material-button.component';\nexport {MaterialCheckboxComponent as Éµbl} from './lib/framework-library/material-design-framework/material-checkbox.component';\nexport {MaterialCheckboxesComponent as Éµbm} from './lib/framework-library/material-design-framework/material-checkboxes.component';\nexport {MaterialChipListComponent as Éµbn} from './lib/framework-library/material-design-framework/material-chip-list.component';\nexport {MaterialDatepickerComponent as Éµbo} from './lib/framework-library/material-design-framework/material-datepicker.component';\nexport {MaterialDesignFrameworkComponent as Éµby} from './lib/framework-library/material-design-framework/material-design-framework.component';\nexport {MaterialDesignFramework as Éµbz} from './lib/framework-library/material-design-framework/material-design.framework';\nexport {MaterialFileComponent as Éµbp} from './lib/framework-library/material-design-framework/material-file.component';\nexport {MaterialInputComponent as Éµbq} from './lib/framework-library/material-design-framework/material-input.component';\nexport {MaterialNumberComponent as Éµbr} from './lib/framework-library/material-design-framework/material-number.component';\nexport {MaterialOneOfComponent as Éµbi} from './lib/framework-library/material-design-framework/material-one-of.component';\nexport {MaterialRadiosComponent as Éµbs} from './lib/framework-library/material-design-framework/material-radios.component';\nexport {MaterialSelectComponent as Éµbt} from './lib/framework-library/material-design-framework/material-select.component';\nexport {MaterialSliderComponent as Éµbu} from './lib/framework-library/material-design-framework/material-slider.component';\nexport {MaterialStepperComponent as Éµbv} from './lib/framework-library/material-design-framework/material-stepper.component';\nexport {MaterialTabsComponent as Éµbw} from './lib/framework-library/material-design-framework/material-tabs.component';\nexport {MaterialTextareaComponent as Éµbx} from './lib/framework-library/material-design-framework/material-textarea.component';\nexport {NoFrameworkComponent as Éµbc} from './lib/framework-library/no-framework/no-framework.component';\nexport {NoFramework as Éµbd} from './lib/framework-library/no-framework/no.framework';\nexport {AddReferenceComponent as Éµf} from './lib/widget-library/add-reference.component';\nexport {ButtonComponent as Éµh} from './lib/widget-library/button.component';\nexport {CheckboxComponent as Éµi} from './lib/widget-library/checkbox.component';\nexport {CheckboxesComponent as Éµj} from './lib/widget-library/checkboxes.component';\nexport {FileComponent as Éµk} from './lib/widget-library/file.component';\nexport {HiddenComponent as Éµl} from './lib/widget-library/hidden.component';\nexport {BASIC_WIDGETS as Éµe} from './lib/widget-library/index';\nexport {InputComponent as Éµm} from './lib/widget-library/input.component';\nexport {MessageComponent as Éµn} from './lib/widget-library/message.component';\nexport {NoneComponent as Éµo} from './lib/widget-library/none.component';\nexport {NumberComponent as Éµp} from './lib/widget-library/number.component';\nexport {OneOfComponent as Éµg} from './lib/widget-library/one-of.component';\nexport {OrderableDirective as Éµq} from './lib/widget-library/orderable.directive';\nexport {RadiosComponent as Éµr} from './lib/widget-library/radios.component';\nexport {RootComponent as Éµs} from './lib/widget-library/root.component';\nexport {SectionComponent as Éµt} from './lib/widget-library/section.component';\nexport {SelectFrameworkComponent as Éµv} from './lib/widget-library/select-framework.component';\nexport {SelectWidgetComponent as Éµw} from './lib/widget-library/select-widget.component';\nexport {SelectComponent as Éµu} from './lib/widget-library/select.component';\nexport {SubmitComponent as Éµx} from './lib/widget-library/submit.component';\nexport {TabComponent as Éµy} from './lib/widget-library/tab.component';\nexport {TabsComponent as Éµz} from './lib/widget-library/tabs.component';\nexport {TemplateComponent as Éµba} from './lib/widget-library/template.component';\nexport {TextareaComponent as Éµbb} from './lib/widget-library/textarea.component';\nexport {WidgetLibraryModule as Éµd} from './lib/widget-library/widget-library.module';\nexport {WidgetLibraryService as Éµc} from './lib/widget-library/widget-library.service';"],"names":["tslib_1.__values","from","Observable","hasValue","Injectable","map","forkJoin","FormGroup","FormArray","FormControl","Subject","tslib_1.__spread","tslib_1.__decorate","Input","Component","ChangeDetectionStrategy","ViewChild","ViewContainerRef","ComponentFactoryResolver","tslib_1.__param","Inject","NG_VALUE_ACCESSOR","forwardRef","EventEmitter","Output","ChangeDetectorRef","DomSanitizer","tslib_1.__extends","Directive","ElementRef","NgZone","NgModule","CommonModule","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","FlexLayoutModule"],"mappings":"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"}
